{"version":3,"file":"TagAPI.js","sourceRoot":"","sources":["../../../../src/lib/tag/TagAPI.ts"],"names":[],"mappings":"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","sourcesContent":["import BaseAPIWithImageSupport, { BaseAPIWithImageSupportParams } from '../common/BaseAPIWithImageSupport.js';\nimport { ImageFormat } from '../types/Image.js';\nimport Tag, { AlbumHighlightsByTag, ReleasesByTag, TagList } from '../types/Tag.js';\nimport { URLS } from '../utils/Constants.js';\nimport { FetchMethod } from '../utils/Fetcher.js';\nimport Limiter from '../utils/Limiter.js';\nimport { ParseError, normalizeUrl, splitUrl } from '../utils/Parse.js';\nimport AlbumHighlightsByTagParser from './AlbumHighlightsByTagParser.js';\nimport ReleasesByTagParser from './ReleasesByTagParser.js';\nimport TagInfoParser from './TagInfoParser.js';\nimport TagListParser from './TagListParser.js';\n\nexport interface TagAPIGetAlbumHighlightsParams {\n  tagUrl: string;\n  imageFormat?: string | number | ImageFormat;\n}\n\nexport interface TagAPIGetReleasesParams {\n  tagUrl: string;\n  imageFormat?: string | number | ImageFormat;\n  useHardcodedDefaultFilters?: boolean;\n  filters?: Record<string, string | number | Array<string | number>>;\n  page?: number;\n}\n\nexport default class TagAPI extends BaseAPIWithImageSupport {\n\n  async list(): Promise<TagList> {\n    const html = await this.fetch(normalizeUrl('tags'));\n    return TagListParser.parseTags(html);\n  }\n\n  async getInfo(tagUrl: string): Promise<Tag> {\n    const html = await this.fetch(tagUrl);\n    return TagInfoParser.parseInfo(html, tagUrl);\n  }\n\n  async getAlbumHighlights(params: TagAPIGetAlbumHighlightsParams): Promise<AlbumHighlightsByTag[]> {\n    const imageConstants = await this.imageAPI.getConstants();\n    const opts = {\n      imageBaseUrl: imageConstants.baseUrl,\n      imageFormat: await this.imageAPI.getFormat(params.imageFormat, 9)\n    };\n\n    const html = await this.fetch(params.tagUrl);\n    return AlbumHighlightsByTagParser.parseHighlights(html, opts);\n  }\n\n  async getReleasesAvailableFilters(tagUrl: string): Promise<ReleasesByTag.Filter[]> {\n    const filterValueNames = await this.getReleaseFilterValueNames(tagUrl);\n    const html = await this.fetch(tagUrl);\n    return ReleasesByTagParser.parseFilters(html, filterValueNames);\n  }\n\n  async getReleases(params: TagAPIGetReleasesParams): Promise<ReleasesByTag> {\n    const imageConstants = await this.imageAPI.getConstants();\n    const opts = {\n      imageBaseUrl: imageConstants.baseUrl,\n      imageFormat: await this.imageAPI.getFormat(params.imageFormat, 9)\n    };\n\n    const _getDefaultFilters = async (tagUrl: string) => {\n      if (params.useHardcodedDefaultFilters) {\n        let tagUrlPath = splitUrl(tagUrl).path;\n        if (tagUrlPath.endsWith('/')) {\n          tagUrlPath = tagUrlPath.substring(0, tagUrlPath.length - 1);\n        }\n        const tagValue = tagUrlPath.split('/').pop();\n\n        return Promise.resolve({\n          tags: [ tagValue ],\n          location: 0,\n          format: 'all',\n          sort: 'pop'\n        });\n      }\n\n      const filterOptions = await this.getReleasesAvailableFilters(tagUrl);\n      const defaultFilters: TagAPIGetReleasesParams['filters'] = {};\n      filterOptions.forEach((filter) => {\n        const selectedOption = filter.options.find((o) => o.selected);\n        const defaultOption = filter.options.find((o) => o.default);\n        if (selectedOption) {\n          if (filter.name === 'tags') {\n            defaultFilters[filter.name] = [ selectedOption.value ];\n          }\n          else {\n            defaultFilters[filter.name] = selectedOption.value;\n          }\n        }\n        else if (defaultOption) {\n          defaultFilters[filter.name] = defaultOption.value;\n        }\n      });\n\n      return defaultFilters;\n\n    };\n\n    const defaultFilters = await _getDefaultFilters(params.tagUrl);\n    const tagsFilter = Array.isArray(defaultFilters.tags) ? [ ...defaultFilters.tags ] : [];\n    if (params?.filters?.tags && Array.isArray(params.filters.tags)) {\n      params.filters.tags.forEach((tag) => {\n        if (!tagsFilter.includes(tag)) {\n          tagsFilter.push(tag);\n        }\n      });\n    }\n    const paramFilters = params.filters ? {\n      ...defaultFilters,\n      ...params.filters,\n      tags: tagsFilter\n    } : defaultFilters;\n\n    const postData = {\n      filters: paramFilters,\n      page: params.page || 1\n    };\n\n    const json = await this.fetch(URLS.DIG_DEEPER, true, FetchMethod.POST, postData);\n    return ReleasesByTagParser.parseReleases(json, opts);\n  }\n\n  /**\n   * @internal\n   */\n  protected async getReleaseFilterValueNames(tagUrl: string) {\n    const url = `${tagUrl}?tab=all_releases`;\n    const html = await this.fetch(url);\n    const path = ReleasesByTagParser.parseHubJSPath(html);\n    if (!path) {\n      throw new ParseError(`Failed to obtain Hub JS path from ${url}`, html);\n    }\n    const js = await this.fetch(path);\n    try {\n      return ReleasesByTagParser.parseHubJSFilterValueNames(js);\n    }\n    catch (error: any) {\n      throw new ParseError('Failed to obtain filter names / values from Hub JS', js, error);\n    }\n  }\n}\n\nexport class LimiterTagAPI extends TagAPI {\n\n  #limiter: Limiter;\n\n  constructor(params: BaseAPIWithImageSupportParams & { limiter: Limiter }) {\n    super(params);\n    this.#limiter = params.limiter;\n  }\n\n  async list(): Promise<TagList> {\n    return this.#limiter.schedule(() => super.list());\n  }\n\n  async getInfo(tagUrl: string): Promise<Tag> {\n    return this.#limiter.schedule(() => super.getInfo(tagUrl));\n  }\n\n  async getAlbumHighlights(params: TagAPIGetAlbumHighlightsParams): Promise<AlbumHighlightsByTag[]> {\n    return this.#limiter.schedule(() => super.getAlbumHighlights(params));\n  }\n\n  async getReleasesAvailableFilters(tagUrl: string): Promise<ReleasesByTag.Filter[]> {\n    return this.#limiter.schedule(() => super.getReleasesAvailableFilters(tagUrl));\n  }\n\n  async getReleases(params: TagAPIGetReleasesParams): Promise<ReleasesByTag> {\n    return this.#limiter.schedule(() => super.getReleases(params));\n  }\n}\n"]}